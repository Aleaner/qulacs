language: cpp

sudo: false

env:
  global:
    - CXX_COMPILER='g++-7'
      C_COMPILER='gcc-7'
      Fortran_COMPILER='gfortran'
      BUILD_TYPE='Release'
      PYTHON3='3.6.7'
      PYTHON2='2.7.11'

matrix:
  include:
    # 1/ OSX GCC7 PYTHON3.6 build
    - os: osx
      osx_image: xcode10.1
      compiler: gcc-7
      env:
        - PYTHON="${PYTHON3}"
        - COVERAGE=OFF
        - PYENV_ROOT="${HOME}/.pyenv"
        - PATH="${PYENV_ROOT}/bin:$PATH"
    # 2/ OSX GCC7 PYTHON2.7 build
    - os: osx
      osx_image: xcode10.1
      compiler: gcc-7
      env:
        - PYTHON="${PYTHON2}"
        - COVERAGE=OFF
        - PYENV_ROOT="${HOME}/.pyenv"
        - PATH="${PYENV_ROOT}/bin:$PATH"
    # 3/ Linux GCC7 PYTHON3.6 build
    - os: linux
      dist: trusty
      compiler: gcc-7
      env:
        - PYTHON="${PYTHON3}"
        - COVERAGE=ON
        - PYENV_ROOT="${HOME}/.pyenv"
        - PATH="${PYENV_ROOT}/bin:$PATH"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake3
            - g++-7
            - gcc-7
            - gfortran-7
            - lcov
            - swig
    # 4/ Linux GCC7 PYTHON2.7 build
    - os: linux
      dist: trusty
      compiler: gcc-7
      env:
        - PYTHON="${PYTHON2}"
        - COVERAGE=ON
        - PYENV_ROOT="${HOME}/.pyenv"
        - PATH="${PYENV_ROOT}/bin:$PATH"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake3
            - g++-7
            - gcc-7
            - gfortran-7
            - lcov
            - swig
    # 5/ Windows VS17 PYTHON3.6 build
    - os: windows
      env:
        - COVERAGE=ON
        - PYTHON="${PYTHON3}"
        - MSBUILD_BIN='C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin'
        - CMAKE_BIN='C:\Program Files\CMake'
        - PYTHON_BIN='C:\Python36'
        - PATH="$MSBUILD_BIN:$CMAKE_BIN:$PYTHON_BIN:$PYTHON_BIN\Scripts:$PATH"
    # 6/ Windows VS17 PYTHON2.7 build
    - os: windows
      env:
        - COVERAGE=ON
        - PYTHON="${PYTHON2}"
        - MSBUILD_BIN='C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin'
        - CMAKE_BIN='C:\Program Files\CMake'
        - PYTHON_BIN='C:\tools\python'
        - PATH="$MSBUILD_BIN:$CMAKE_BIN:$PYTHON_BIN:$PYTHON_BIN\Scripts:$PATH"

cache:
  directories:
    - $HOME/.local
    # pip
    - $HOME/.cache/pip
    # pyenv
    - $HOME/.pyenv
    # Homebrew
    - $HOME/Library/Caches/Homebrew

before_install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "windows" ]]; then
      choco install -y cmake
      choco install -y python --version "${PYTHON}"
      if [[ "${PYTHON}" == "3"* ]]; then
        alias python="python3"
      fi
    fi
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew update &> /dev/null
      brew cask uninstall --force oclint
      brew upgrade cmake
      brew install gcc@7 swig
    fi
  - |
    if [[ "${TRAVIS_OS_NAME}" != "windows" && -z "$(ls -A ${PYENV_ROOT})" ]]; then
      git clone https://github.com/pyenv/pyenv.git "${PYENV_ROOT}"
      eval "$(pyenv init -)"
      pyenv install "${PYTHON}"
      pyenv local "${PYTHON}"
    elif [[ "${TRAVIS_OS_NAME}" != "windows" ]]; then
      eval "$(pyenv init -)"
      pyenv local "${PYTHON}"
    fi
  - python --version
  - python -m pip install --upgrade pip
  - pip install -U --only-binary=numpy,scipy numpy scipy

install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "windows" ]]; then
      ./generate_msvc_project.bat
      cd visualstudio
      cmake --bulid . --target ALL_BUILD --config Release
      cmake --build . --target python --config Release
    else
      mkdir build
      cd build
      cmake -G "Unix Makefiles" -D CMAKE_BUILD_TYPE=Release -D CMAKE_C_COMPILER=gcc-7 -D CMAKE_CXX_COMPILER=g++-7 ..
      make
      make python
    fi

script:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "windows" ]]; then
      cmake --build . --target test --config Release
      cmake --build . --target pythontest --config Release
    else
      make test
      make pythontest
    fi
    
